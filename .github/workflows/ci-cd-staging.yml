name: CI/CD - Staging

on:
  push:
    branches: [ develop ]

jobs:
  # 어차피 지금은 fast forward라서 필요하지 않을 듯 함
  # ci:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     # Build migrations
  #     - name: Cache migrations
  #       id: migration-cache
  #       uses: actions/cache@v2
  #       env:
  #         cache-name: cache-migrations
  #       with:
  #         path: server
  #         key: ${{ runner.os }}-${{env.cache-name}}-${{ hashFiles('**/typeorm/**/*.ts') }}
  #           ${{ runner.os }}-${{env.cache-name}}-
  #     - name: Build
  #       if: steps.migration-cache.outputs.cache-hit != 'true'
  #       run: yarn run build

  #     # Test
  #     - name: Test
  #       run: |
  #         yarn run test:cov
  #     - name: Upload coverage to Codecov
  #       uses: codecov/codecov-action@v1
  #       with:
  #         token: ${{ secrets.CODECOV_TOKEN }}
  #     - name: Test(e2e)
  #       run: |
  #         yarn run test:e2e

  deploy-dev:
    name: Deploy to develop
    runs-on: ubuntu-latest
    environment:
      name: develop
      url: https://cloud-config.dev.whitekiwi.link

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # Deploy image to ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: cloud-config-server
          IMAGE_TAG: latest
          GITHUB_REF: ${{ github.ref }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest-$GITHUB_SHA
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest-$GITHUB_SHA

      # Update ECS services
      - name: Update ECS services
        run: |
          aws ecs update-service --force-new-deployment --service cloud-config-server-dev --cluster cloud-config

  # Create Sentry release
  # create-sentry-release:
  #   needs: deploy-dev
  #   name: Create Sentry release
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     # Build
  #     - name: Build
  #       run: |
  #         yarn run build

  #     # Get Current Version from pacakge.json
  #     - name: Get Current Version
  #       run: |
  #         cat ./package.json | jq -r '.version'
  #         echo "VERSION=$(cat ./package.json | jq -r '.version')" >> $GITHUB_ENV

  #     # Create Sentry release
  #     - name: Create Sentry release
  #       uses: getsentry/action-release@v1
  #       env:
  #         SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  #         SENTRY_ORG: cloud-config-admins
  #         SENTRY_PROJECT: cloud-config
  #       with:
  #         environment: STAGING
  #         sourcemaps: ./server/src
  #         version: ${{ env.VERSION }}
  #         url_prefix: "~/"
